{
  "manifest": {
    "name": "next-with-apollo",
    "version": "3.3.1",
    "description": "Apollo HOC for Next.js",
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "scripts": {
      "fix": "tslint -p tsconfig.json --fix",
      "tslint": "tslint -c tslint.json -p tsconfig.json -t codeFrame",
      "jest": "jest",
      "test": "npm run tslint && jest --coverage",
      "build-ts": "tsc",
      "watch": "tsc -w",
      "build": "npm run build-ts",
      "prepublishOnly": "npm run build && npm test"
    },
    "author": {
      "name": "lfades"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/lfades/next-with-apollo.git"
    },
    "bugs": {
      "url": "https://github.com/lfades/next-with-apollo/issues"
    },
    "prettier": {
      "singleQuote": true
    },
    "peerDependencies": {
      "react": "^15.0.0 || ^16.0.0",
      "next": "^6.0.0 || ^7.0.0",
      "react-apollo": "^2.2.4"
    },
    "devDependencies": {
      "@types/graphql": "14.0.3",
      "@types/jest": "^23.3.10",
      "@types/next": "^7.0.5",
      "@types/node": "^10.12.18",
      "@types/prop-types": "^15.5.8",
      "@types/react": "^16.7.17",
      "apollo-client": "^2.4.8",
      "graphql": "14.0.2",
      "jest": "^23.6.0",
      "next": "^7.0.2",
      "prettier": "^1.15.3",
      "react": "^16.6.3",
      "ts-jest": "^23.10.5",
      "tslint": "^5.12.0",
      "tslint-config-prettier": "^1.17.0",
      "tslint-eslint-rules": "^5.4.0",
      "tslint-plugin-prettier": "^2.0.1",
      "typescript": "^3.2.2"
    },
    "dependencies": {
      "@types/react-dom": "^16.0.11",
      "isomorphic-unfetch": "^3.0.0",
      "prop-types": "^15.6.2",
      "react-apollo": "^2.3.3",
      "react-dom": "^16.6.3"
    },
    "_registry": "npm",
    "_loc": "yarn-cache/v4/npm-next-with-apollo-3.3.1-f7e3d5e3d26b5f0649d7a172897e93964c748d26/node_modules/next-with-apollo/package.json",
    "readmeFilename": "README.md",
    "readme": "# next-with-apollo\n\nApollo HOC for Next.js, this docs are for Next > 6, for Next < 5  go [here](./README_v1.md) and use the version 1.0\n\n## How to use\n\nInstall the package with npm\n\n```sh\nnpm install next-with-apollo\n```\n\nor with yarn\n\n```sh\nyarn add next-with-apollo\n```\n\nCreate the HOC using a basic setup and [apollo-boost](https://github.com/apollographql/apollo-client/tree/master/packages/apollo-boost)\n\n> Note: [apollo-boost](https://github.com/apollographql/apollo-client/tree/master/packages/apollo-boost) is used in this example because is the fastest way to create an `ApolloClient`, but is not required.\n>\n> Previously this package had some configs to create an `ApolloClient`, those were removed but you can see an example of how to create the same `ApolloClient` by yourself [here](https://github.com/lfades/next-with-apollo/issues/13#issuecomment-390289449).\n```js\n// lib/withApollo.js\nimport withApollo from 'next-with-apollo'\nimport ApolloClient, { InMemoryCache }  from 'apollo-boost'\nimport { GRAPHQL_URL } from '../configs'\n\nexport default withApollo(({ ctx, headers, initialState }) => (\n  new ApolloClient({\n    uri: GRAPHQL_URL,\n    cache: new InMemoryCache().restore(initialState || {})\n  })\n))\n```\n\n> `withApollo` accepts a function that receives `{ ctx, headers }` or `{ initialState }` and returns an `ApolloClient`\n\nWrap Next's `App` in `pages/_app.js`\n\n```js\nimport App, { Container } from 'next/app'\nimport { ApolloProvider } from 'react-apollo'\nimport withApollo from '../lib/withApollo'\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps, apollo } = this.props;\n\n    return (\n      <Container>\n        <ApolloProvider client={apollo}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp)\n```\n\nNow every page in `pages/` can use anything from `react-apollo`!. Pages will have access to the `ApolloClient` too: `getInitialProps({ apolloClient })`\n\n**withApollo** can also receive some options as second parameter:\n\n| Key | Type | Default | Note |\n| --- | ---- | ------- | ---- |\n| `getDataFromTree` |  `string` | `always` | Should the apollo store be hydrated before the first render ?, allowed values are `always`, `never` or `ssr` (don't hydrate on client side navigation)\n\nUsage example:\n\n```js\nexport default withApollo(\n  () => new ApolloClient({ uri: GRAPHQL_URL }),\n  {\n    getDataFromTree: 'always'\n  }\n)\n```\n\n## How it works\n\n`next-with-apollo` will create a Higher-Order Component (HOC) with your configuration that can be used in `pages/_app` to wrap an `ApolloClient` to any Next page, it will also fetch your queries before the first page load to [hydrate the store](https://dev-blog.apollodata.com/how-server-side-rendering-works-with-react-apollo-20f31b0c7348).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Luis Fernando Alvarez D.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/next-with-apollo/-/next-with-apollo-3.3.1.tgz#f7e3d5e3d26b5f0649d7a172897e93964c748d26",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/next-with-apollo/-/next-with-apollo-3.3.1.tgz",
    "hash": "f7e3d5e3d26b5f0649d7a172897e93964c748d26",
    "integrity": "sha512-sxJcx39okz6iw/Ed2qI39dvNQJvjM9xc1erZSL3bNGDmTSCtrDnkC1jO/AumWNeL1X9zjA+pHqIXUlgi+xp5vw==",
    "registry": "npm",
    "packageName": "next-with-apollo"
  },
  "registry": "npm",
  "hash": "f7e3d5e3d26b5f0649d7a172897e93964c748d26"
}