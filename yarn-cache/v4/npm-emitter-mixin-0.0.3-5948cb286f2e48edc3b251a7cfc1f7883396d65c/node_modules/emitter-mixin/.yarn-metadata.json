{
  "manifest": {
    "name": "emitter-mixin",
    "version": "0.0.3",
    "description": "Node's EventEmitter mixin",
    "main": "y",
    "scripts": {
      "test": "make test"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/yields/emitter-mixin"
    },
    "keywords": [
      "emitter",
      "mixin",
      "EventEmitter",
      "events"
    ],
    "author": {
      "name": "Amir Abu Shareb",
      "email": "amir.abu.shareb@me.com"
    },
    "license": "MIT",
    "devDependencies": {
      "mocha": "*",
      "should": "*"
    },
    "_registry": "npm",
    "_loc": "yarn-cache/v4/npm-emitter-mixin-0.0.3-5948cb286f2e48edc3b251a7cfc1f7883396d65c/node_modules/emitter-mixin/package.json",
    "readmeFilename": "Readme.md",
    "readme": "\n[Node](https://nodejs.org) EventEmitter mixin.\n\n## Example\n\n```javascript\n\nvar emitter = require('emitter-mixin');\n\nfunction Person () {}\nemitter(Person.prototype);\n\nvar person = new Person();\nperson.on('foo', function (arg) {\n  console.log(arg);\n}).emit('foo', 'bar');\n\n// > bar\n```\n\nYou don't have to do `Emitter.call(this)` in your constructor\nanymore, the mixin defines an `_events` getter that does the\nmagic for you.\n\n```javascript\nemitter(Person.prototype);\nvar person = new Person();\nperson._events == person._events;\n// > true\nperson._events == Person.prototype._events;\n// > false\n```\n\n## Tests\n\n```bash\n$ make test\n```\n\n## License\n\n(MIT)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/emitter-mixin/-/emitter-mixin-0.0.3.tgz#5948cb286f2e48edc3b251a7cfc1f7883396d65c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/emitter-mixin/-/emitter-mixin-0.0.3.tgz",
    "hash": "5948cb286f2e48edc3b251a7cfc1f7883396d65c",
    "integrity": "sha1-WUjLKG8uSO3DslGnz8H3iDOW1lw=",
    "registry": "npm",
    "packageName": "emitter-mixin"
  },
  "registry": "npm",
  "hash": "5948cb286f2e48edc3b251a7cfc1f7883396d65c"
}