{
  "manifest": {
    "name": "kleur",
    "version": "2.0.2",
    "repository": {
      "type": "git",
      "url": "https://github.com/lukeed/kleur.git"
    },
    "description": "The fastest Node.js library for formatting terminal text with ANSI colors~!",
    "license": "MIT",
    "files": [
      "*.js",
      "*.d.ts"
    ],
    "author": {
      "name": "Luke Edwards",
      "email": "luke.edwards05@gmail.com",
      "url": "lukeed.com"
    },
    "scripts": {
      "test": "tape test/*.js | tap-spec"
    },
    "engines": {
      "node": ">=6"
    },
    "keywords": [
      "ansi",
      "cli",
      "color",
      "colors",
      "console",
      "terminal"
    ],
    "types": "kleur.d.ts",
    "devDependencies": {
      "tap-spec": "^5.0.0",
      "tape": "^4.9.1"
    },
    "_registry": "npm",
    "_loc": "yarn-cache/v4/npm-kleur-2.0.2-b704f4944d95e255d038f0cb05fb8a602c55a300/node_modules/kleur/package.json",
    "readmeFilename": "readme.md",
    "readme": "<div align=\"center\">\n  <img src=\"shots/logo.png\" alt=\"kleur\" height=\"120\" />\n</div>\n\n<div align=\"center\">\n  <a href=\"https://npmjs.org/package/kleur\">\n    <img src=\"https://badgen.now.sh/npm/v/kleur\" alt=\"version\" />\n  </a>\n  <a href=\"https://travis-ci.org/lukeed/kleur\">\n    <img src=\"https://badgen.now.sh/travis/lukeed/kleur\" alt=\"travis\" />\n  </a>\n  <a href=\"https://npmjs.org/package/kleur\">\n    <img src=\"https://badgen.now.sh/npm/dm/kleur\" alt=\"downloads\" />\n  </a>\n  <a href=\"https://packagephobia.now.sh/result?p=kleur\">\n    <img src=\"https://packagephobia.now.sh/badge?p=kleur\" alt=\"install size\" />\n  </a>\n</div>\n\n<div align=\"center\">The fastest Node.js library for formatting terminal text with ANSI colors~!</div>\n\n## Features\n\n* No dependencies\n* Super [lightweight](##load-time) & [performant](#performance)\n* Supports [nested](#nested-methods) & [chained](#chained-methods) colors\n* No `String.prototype` modifications\n* Conditional [color support](#conditional-support)\n* Familiar [API](#api)\n\n_Originally inspired by [`ansi-colors`](https://github.com/doowb/ansi-colors). See [Credits](#credits) for more info!_\n\n\n## Install\n\n```\n$ npm install --save kleur\n```\n\n\n## Usage\n\n```js\nconst kleur = require('kleur');\n\n// basic usage\nkleur.red('red text');\n\n// chained methods\nkleur.blue.bold.underline('howdy partner');\n\n// nested methods\nkleur.bold(`${ kleur.bgRed.white('[ERROR]') } ${ kleur.red.italic('Something happened')}`);\n```\n\n### Chained Methods\n\n```js\nconsole.log(kleur.bold.red('this is a bold red message'));\nconsole.log(kleur.bold.italic('this is a bold italicized message'));\nconsole.log(kleur.bold.yellow.bgRed.italic('this is a bold yellow italicized message'));\nconsole.log(kleur.green.bold.underline('this is a bold green underlined message'));\n```\n\n<img src=\"shots/1.png\" width=\"300\" />\n\n### Nested Methods\n\n```js\nconst { yellow, red, cyan } = require('kleur');\n\nconsole.log(yellow(`foo ${red.bold('red')} bar ${cyan('cyan')} baz`));\nconsole.log(yellow('foo ' + red.bold('red') + ' bar ' + cyan('cyan') + ' baz'));\n```\n\n<img src=\"shots/2.png\" width=\"300\" />\n\n\n### Conditional Support\n\nToggle color support as needed; `kleur` assumes it's always enabled.\n\n```js\nconst kleur = require('kleur');\n\n// manually disable\nkleur.enabled = false;\n\n// or use a library to detect support\nkleur.enabled = require('color-support').level;\n\nconsole.log(kleur.red('I will only be colored red if the terminal supports colors'));\n```\n\n\n## API\n\nAny `kleur` method returns a `String` (when invoked, not chained). It's up to the developer to pass the output to destinations like `console.log`, `process.stdout.write`, etc.\n\nThe methods below are grouped by type for legibility purposes only. They each can be [chained](#chained-methods) or [nested](#nested-methods) with one another.\n\n***Colors:***\n> black &mdash; red &mdash; green &mdash; yellow &mdash; blue &mdash; magenta &mdash; cyan &mdash; white &mdash; gray\n\n***Backgrounds:***\n> bgBlack &mdash; bgRed &mdash; bgGreen &mdash; bgYellow &mdash; bgBlue &mdash; bgMagenta &mdash; bgCyan &mdash; bgWhite\n\n***Modifiers:***\n> reset &mdash; bold &mdash; dim &mdash; italic* &mdash; underline &mdash; inverse &mdash; hidden &mdash; strikethrough*\n\n<sup>* <em>Not widely supported</em></sup>\n\n\n## Benchmarks\n\n> Using Node v8.9.0\n\n### Load time\n\n```\nchalk: 9.372ms\nturbocolor: 0.526ms\nansi-colors: 0.851ms\nkleur: 0.862ms\n```\n\n### Performance\n\n```\n# All Colors\n  ansi-colors x 60,485 ops/sec ±0.63% (96 runs sampled)\n  chalk x 7,184 ops/sec ±3.77% (68 runs sampled)\n  turbocolor x 95,468 ops/sec ±0.60% (94 runs sampled))\n  kleur x 151,365 ops/sec ±0.22% (95 runs sampled)\n\n# Stacked colors\n  ansi-colors x 13,754 ops/sec ±0.44% (93 runs sampled)\n  chalk x 1,732 ops/sec ±3.76% (71 runs sampled)\n  turbocolor x 28,709 ops/sec ±1.32% (92 runs sampled)\n  kleur x 30,837 ops/sec ±0.13% (93 runs sampled)\n\n# Nested colors\n  ansi-colors x 28,898 ops/sec ±0.32% (96 runs sampled)\n  chalk x 3,389 ops/sec ±4.03% (71 runs sampled)\n  turbocolor x 48,034 ops/sec ±1.47% (99 runs sampled)\n  kleur x 61,266 ops/sec ±0.33% (97 runs sampled)\n```\n\n\n## Credits\n\nThis project was originally inspired by [Brian Woodward](https://github.com/doowb)'s awesome [`ansi-colors`](https://github.com/doowb/ansi-colors) project.\n\nUnlike v1, the latest version(s) of `kleur` no longer supports:\n\n* printf-formatting\n* variadic function arguments\n* multiline text via `\\n` or `\\r`\n* `kleur.clear()` method\n\nIn addition, `kleur` continues to be ship without symbols and bright color variants.\n\nIf you need _any_ of these features, please use `ansi-colors` instead~!\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/kleur/-/kleur-2.0.2.tgz#b704f4944d95e255d038f0cb05fb8a602c55a300",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/kleur/-/kleur-2.0.2.tgz",
    "hash": "b704f4944d95e255d038f0cb05fb8a602c55a300",
    "integrity": "sha512-77XF9iTllATmG9lSlIv0qdQ2BQ/h9t0bJllHlbvsQ0zUWfU7Yi0S8L5JXzPZgkefIiajLmBJJ4BsMJmqcf7oxQ==",
    "registry": "npm",
    "packageName": "kleur"
  },
  "registry": "npm",
  "hash": "b704f4944d95e255d038f0cb05fb8a602c55a300"
}